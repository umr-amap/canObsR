[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 managecrownsdata authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hugo Leblanc. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Leblanc H, Tulet H, Ploton P (2025). canObsR: Process repetead UAV survey. R package version 0.0.0.9000,, https://github.com/umr-amap/canObsR.","code":"@Manual{,   title = {canObsR: Process repetead UAV survey},   author = {Hugo Leblanc and Hadrien Tulet and Pierre Ploton},   year = {2025},   note = {R package version 0.0.0.9000,},   url = {https://github.com/umr-amap/canObsR}, }"},{"path":"/index.html","id":"managecrownsdata","dir":"","previous_headings":"","what":"Process repetead UAV survey","title":"Process repetead UAV survey","text":"package Citation Install Documentation use managecrownsdata Generate orthomosaics","code":""},{"path":"/index.html","id":"the-package","dir":"","previous_headings":"","what":"The package","title":"Process repetead UAV survey","text":"R package aims streamlining, standardizing facilitating processing repetead UAV surveys R. focuses (now) RGB data. notably allows generating 3D 4D mosaics & mosaics spatial alignment using state---art approaches, provides tools generate reference labels, segment crowns (now) classify crown phenophases (now).","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Process repetead UAV survey","text":"cite ‘managecrownsdata’, please use citation(‘managecrownsdata’).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Process repetead UAV survey","text":"","code":"library(devtools) install_github(\"https://github.com/hugolblc/managecrownsdata.git\")"},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Process repetead UAV survey","text":"addition usual R package documentation, also extensive docs examples ","code":""},{"path":[]},{"path":"/index.html","id":"python-environment","dir":"","previous_headings":"","what":"Python environment","title":"Process repetead UAV survey","text":"First, make sure python>3.9 anaconda / miniconda installed device. , can download using following links : https://www.python.org/downloads/ https://www.anaconda.com/download/ completing installation steps, can create python environment contain everything need call package’s functions.","code":"# Imports library(reticulate) library(canObsR) # Python env creation env_name <- \"managecrownsdata_env\"   # use the name you want for your environment environment = file.path( system.file(package=\"managecrownsdata\"), 'PYTHON/environment.yaml')   # use the environment.yaml file included in the package  conda_create(env_name, environment = environment) use_condaenv(env_name)"},{"path":"/index.html","id":"metashape","dir":"","previous_headings":"","what":"Metashape","title":"Process repetead UAV survey","text":"environment just created contains already necessary dependences Metashape python API, required align photos using TimeSIFT. install , first need download file Metashape website : https://www.agisoft.com/downloads/installer/. Go “Python 3 module” section click link corresponding operating system. download file named “Metashape[…].whl”. , copy path downloaded .whl file ","code":"# Add metashape API to env path_to_whl_file <- \"MYPATH/Metashape-2.1.3-cp37.cp38.cp39.cp310.cp311-none-win_amd64.whl\"   #replace with your path  py_install(path_to_whl_file, envname = env_name, pip=TRUE)"},{"path":"/index.html","id":"metashape-license-activation","dir":"","previous_headings":"Metashape","what":"Metashape license activation","title":"Process repetead UAV survey","text":"python environment ready use now. However, Agisoft Metashape requires paid license order access features. necessary Metashape application installed device order python API work, whether application installed /activated, API still needs activated using license key (can used application already installed). activate key, follow steps : Open anaconda command prompt Activate environnement just created : $ conda activate managecrownsdata_env start python activate licence : $ python >>> import Metashape >>> Metashape.license.activate(“AAAA-BBBB-CCCC-DDDD”) # replace license key works, can close command prompt. good go !","code":""},{"path":"/index.html","id":"generate-orthomosaics","dir":"","previous_headings":"","what":"Generate orthomosaics","title":"Process repetead UAV survey","text":"One main functions package generate orthomosaics R, using arosics(AROSICS) Metashape python API. guide step step workflow, download test dataset follow instructions . Generate orthomosaics","code":""},{"path":"/reference/align_Mosa.html","id":null,"dir":"Reference","previous_headings":"","what":"Implement AROSICS in R — align_Mosa","title":"Implement AROSICS in R — align_Mosa","text":"Implementation R pipeline uses arosics(AROSICS) perform global local co-registration file group files located inside folder","code":""},{"path":"/reference/align_Mosa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implement AROSICS in R — align_Mosa","text":"","code":"align_Mosa(   path_in,   ref_filepath,   out_dir_path,   corr_type = \"global\",   max_shift = 250L,   max_iter = 100L,   grid_res = 1000L,   window_size = NULL,   window_pos = list(NULL, NULL),   mp = NULL,   save_data = TRUE,   save_vector_plot = FALSE,   apply_matrix = FALSE )"},{"path":"/reference/align_Mosa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implement AROSICS in R — align_Mosa","text":"path_in chr. Path target image, folder containing multiple target images. Images must Geotiff format. ref_filepath chr. Path reference image. out_dir_path chr. Directory outputs saved. corr_type chr. Type co-registration. Either 'global' (default) 'local'. max_shift int. Maximum shift distance reference image pixel units max_iter int. Maximum number iterations matching (default: 5). grid_res int. Tie point grid resolution pixels target image (x-direction). applies local co-registration. window_size int. Custom matching window size (pixels) (X, Y) tuple (default: (1000, 1000)). window_pos tuple. Custom matching window position (X, Y) map coordinate projection reference image (default: central position image overlap). used performing global co-registration. mp int. Number CPUs use. None (default), available CPUs used. mp=1, multiprocessing done. save_data logical. Saves transformation metadata .pkl file, tie points data csv file. latter happens performing local co-registration. save_vector_plot logical. saves map calculated tie point grid JPEG file. effect performing local co-registration. apply_matrix logical. correcting multiple images, applies shifts computed first image remaining ones, instead computing shifts independently. Allows better alignement faster computing time. WARNING : Currently, inputs images extent, temporary padded images need created. hope change soon ; , apply_matrix disabled default)","code":""},{"path":"/reference/align_Mosa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implement AROSICS in R — align_Mosa","text":"None","code":""},{"path":"/reference/align_Mosa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Implement AROSICS in R — align_Mosa","text":"","code":"if (FALSE) { # \\dontrun{ library(reticulate)  align_Mosa(path_in = \"path_to_ortho.tif\",              ref_filepath = \"ref_image.tif\",              out_dir_path = \"my_output_dir\",              corr_type = \"local\",              grid_res = 500,              save_data = TRUE,              save_vector_plot = TRUE              )  align_Mosa(path_in = \"path_to_input_folder\",              ref_filepath = \"ref_image.tif\",              out_dir_path = \"my_output_dir\",              corr_type = \"local\",              grid_res = 500,              save_data = FALSE,              mp = 5,               )  align_Mosa(path_in = \"path_to_input_folder\",              ref_filepath = \"ref_image.tif\",              out_dir_path = \"my_output_dir\",              corr_type = \"global\",              max_shift = 200,              save_data = TRUE,              apply_matrix = TRUE,              mp = 1              )              } # }"},{"path":"/reference/check_availableCrowns.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the number of crowns included in each image — check_availableCrowns","title":"Check the number of crowns included in each image — check_availableCrowns","text":"extend images can changed one image another, function return number crowns included image vector id contained id.","code":""},{"path":"/reference/check_availableCrowns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the number of crowns included in each image — check_availableCrowns","text":"","code":"check_availableCrowns(path_bbox, crownsFile, dates = NULL)"},{"path":"/reference/check_availableCrowns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the number of crowns included in each image — check_availableCrowns","text":"path_bbox path non NA Bbox return function extract_bboxImages() crownsFile sf object  crowns 'id' variable. dates chr. Vector dates (format '%Y%m%d', p.e '20220925'). order dates match order dates image path_bbox","code":""},{"path":"/reference/check_availableCrowns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the number of crowns included in each image — check_availableCrowns","text":"list dotchart","code":""},{"path":"/reference/check_crownsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the crown file compatibility — check_crownsFile","title":"Check the crown file compatibility — check_crownsFile","text":"Check crown file compatibility managecrownsdata functions. Return text, give informations file modifications needed.","code":""},{"path":"/reference/check_crownsFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the crown file compatibility — check_crownsFile","text":"","code":"check_crownsFile(path_crowns)"},{"path":"/reference/check_crownsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the crown file compatibility — check_crownsFile","text":"path_crowns chr. Path crown file","code":""},{"path":"/reference/check_crownsFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the crown file compatibility — check_crownsFile","text":"Text give information file. Indicates whether file compatible  functions package. Pay attention line starting '– ERROR –'.","code":""},{"path":"/reference/create_files_architecture.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the recommended files architecture — create_files_architecture","title":"Create the recommended files architecture — create_files_architecture","text":"Create recommended files architecture.","code":""},{"path":"/reference/create_files_architecture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the recommended files architecture — create_files_architecture","text":"","code":"create_files_architecture(path = NULL, main_folder_name = NULL)"},{"path":"/reference/create_files_architecture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the recommended files architecture — create_files_architecture","text":"path chr. path create main folder main_folder_name chr. name main folder","code":""},{"path":"/reference/create_labelingFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create xlsx labeling file — create_labelingFile","title":"Create xlsx labeling file — create_labelingFile","text":"function create xlsx file labeling","code":""},{"path":"/reference/create_labelingFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create xlsx labeling file — create_labelingFile","text":"","code":"create_labelingFile(   path_crowns,   site = NULL,   dates = NULL,   save_xlsx = FALSE,   directory = NULL )"},{"path":"/reference/create_labelingFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create xlsx labeling file — create_labelingFile","text":"path_crowns chr. Path crown file site chr. site name. dates chr. vector dates (format 'YYYYMMDD', p.e '20220925'). save_xlsx logical. TRUE, save table xlsx file. Indicate path directory parameters directory path save xlsx file.","code":""},{"path":"/reference/create_nonNA_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and export the non NA area of images. — create_nonNA_bbox","title":"Extract and export the non NA area of images. — create_nonNA_bbox","text":"function extract area images covered non NA values return sf object one polygon per image.","code":""},{"path":"/reference/create_nonNA_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and export the non NA area of images. — create_nonNA_bbox","text":"","code":"create_nonNA_bbox(path_in, dates = NULL, out_dir_path = NULL, filename = NULL)"},{"path":"/reference/create_nonNA_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and export the non NA area of images. — create_nonNA_bbox","text":"path_in chr. Path folder mosaics located. dates chr. Vector dates (format '%Y%m%d', p.e '20220925'). order dates match order dates mosaics path_in folder. out_dir_path chr. Path directory used export vector files. One file export per date. NULL, vector exported. filename logical. Name files.","code":""},{"path":"/reference/extr_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract dates from files names — extr_dates","title":"Extract dates from files names — extr_dates","text":"Extract dates files names","code":""},{"path":"/reference/extr_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract dates from files names — extr_dates","text":"","code":"extr_dates(names_img)"},{"path":"/reference/extr_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract dates from files names — extr_dates","text":"names_img chr. files basenames.","code":""},{"path":"/reference/extract_crownsImages.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract crowns images — extract_crownsImages","title":"Extract crowns images — extract_crownsImages","text":"function extracts save .jpeg images crown date.","code":""},{"path":"/reference/extract_crownsImages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract crowns images — extract_crownsImages","text":"","code":"extract_crownsImages(   path_images,   path_crowns,   path_bbox,   out_dir_path,   site = NULL,   dates = NULL,   N_cores = 1,   width = 720,   height = 825 )"},{"path":"/reference/extract_crownsImages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract crowns images — extract_crownsImages","text":"path_images list full paths RGB rasters. path_crowns chr. Path crown file path_bbox chr. Path folder non NA Bbox returned function extract_bboxImages() stored. out_dir_path chr. path directory use stored images. function create folder, need exists. site chr. name site, p.e 'Mbalmayo'. dates chr. Vector dates (format '%Y_%m_%d', p.e '2022_09_25'). order dates match order dates image path_images N_cores xx width num. width device height num. height device","code":""},{"path":"/reference/extract_crownsImages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract crowns images — extract_crownsImages","text":"extract_crownsImages() create one folder per id save images. folder names 'crown_the idthe species name' exemple 'crown_5_Lophira alata'. images names 'crownthe idthe species namethe date.jpeg' exemple 'crown_5_Lophira alata_2022-11-08.jpeg'. function upload square image neighbouring tree title add top, image size 720*825 pixels. specific_quality TRUE, image size can changed specifying height width parameters.","code":""},{"path":"/reference/extract_rgbValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract RGB metrics — extract_rgbValues","title":"Extract RGB metrics — extract_rgbValues","text":"function extracts RGB metrics (red, green, blue, sumrgb, rcc, gcc, bcc, gndvi, gli) crown date. first compute metrics whole mosaics extracts value crown scale using exactextractr::exact_extract function. mean / variance can extracted (see 'fun' parameter).","code":""},{"path":"/reference/extract_rgbValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract RGB metrics — extract_rgbValues","text":"","code":"extract_rgbValues(   path_images,   path_crowns,   out_dir_path,   ncor = 1,   sites = NULL,   dates = NULL )"},{"path":"/reference/extract_rgbValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract RGB metrics — extract_rgbValues","text":"path_images list full paths RGB rasters. path_crowns chr. Path crown file out_dir_path chr. path directory use stored result. ncor num. Number cores sites chr. name site, p.e 'Mbalmayo'. dates chr. vector dates (format 'yyyy_mm_dd', p.e '2022_09_25'). order dates match order path_images !","code":""},{"path":"/reference/generate_Mosa.html","id":null,"dir":"Reference","previous_headings":"","what":"Implement Time-SIFT in R — generate_Mosa","title":"Implement Time-SIFT in R — generate_Mosa","text":"Implementation R pipeline performs Time-SIFT process time series drone images using Metashape python API. photos loaded aligned, orthomosaics (optionally) DEMs generated date flight.","code":""},{"path":"/reference/generate_Mosa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implement Time-SIFT in R — generate_Mosa","text":"","code":"generate_Mosa(   path_in,   out_dir_ortho,   out_dir_DEM = NULL,   out_dir_project = NULL,   data_type = \"RGB\",   resol_ref = 0.05,   crs = \"EPSG::32622\",   site_name = \"\",   calibrate_col = TRUE,   sun_sensor = FALSE,   group_by_flight = FALSE,   downscale_factor_alignement = 1L,   downscale_factor_depth_map = 2L,   suffix = \"_\" )"},{"path":"/reference/generate_Mosa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implement Time-SIFT in R — generate_Mosa","text":"path_in chr. Path folder data located. Inside folder, structure subfolders containing images accepted, long date specified folders' name YYYYMMDD/YYYYMM format. date used later distinct image belongs date building orthomosaics. out_dir_ortho chr. Folder orthomosaics saved. out_dir_DEM chr. Folder DEMs saved. path specified, DEMs saved default. out_dir_project chr. Folder Metashape project saved. path specified, project saved default. data_type chr. type data used. Either 'RGB' (default) 'MS' (multispectral images). resol_ref num. resolution (meters) used generate DEMs orthomosaics. Defaults 0.05. crs chr. Coordinate system used orthomosaic, string format. Example: crs=\"EPSG::32622\" (default value). site_name chr. Adds data site name names created folders files, better separate generated data different projects. specified, names stay generic. calibrate_col logical. Applies white balance. sun_sensor logical. Calibrates reflectance using sun sensor. applies multispectral images. group_by_flight logical. Regroups data flight (.e. one orthomosaic subfolder input folder containing images). FALSE, regroups date (default). downscale_factor_alignement int. Alignment accuracy (0 - Highest, 1 - High, 2 - Medium, 4 - Low, 8 - Lowest). Defaults 1. downscale_factor_depth_map int. Depth map quality (1 - Ultra high, 2 - High, 4 - Medium, 8 - Low, 16 - Lowest). Defaults 2. suffix chr. Text add end output filenames.","code":""},{"path":"/reference/generate_Mosa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implement Time-SIFT in R — generate_Mosa","text":"None","code":""},{"path":"/reference/generate_Mosa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Implement Time-SIFT in R — generate_Mosa","text":"","code":"if (FALSE) { # \\dontrun{ library(reticulate)  generate_Mosa(path_in = \"path_to_my_drone_data\",                out_dir_ortho = \"my_output_folder/ORTHO\",                #out_dir_DEM = \"my_output_folder/DEM\",                data_type = \"RGB\",                resol_ref = 0.5,                site_name = \"Bouamir\",                crs = \"EPSG::32633\"                )  generate_Mosa(path_in = \"path_to_my_drone_data\",                out_dir_ortho = \"my_output_folder/ORTHO\",                #out_dir_DEM = \"my_output_folder/DEM\",                data_type = \"MS\",                sun_sensor = TRUE,                crs = \"EPSG::32622\",                downscale_factor_depth_map = 4,                group_by_flight = TRUE,                suffix = \"_ORTHO\"                )                } # }"},{"path":"/reference/heatmap_Labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the heatmap of Labels — heatmap_Labels","title":"Plot the heatmap of Labels — heatmap_Labels","text":"fct function","code":""},{"path":"/reference/heatmap_Labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the heatmap of Labels — heatmap_Labels","text":"","code":"heatmap_Labels(   longLabels,   Species = NULL,   Genus = NULL,   Family = NULL,   title = NULL,   simplify = FALSE,   repro = FALSE )"},{"path":"/reference/heatmap_Labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the heatmap of Labels — heatmap_Labels","text":"longLabels tibble dataframe long data format labels Species chr. Specifying species want filter Genus chr. Specifying genus want filter Family chr. Specifying family(ies) want filter title chr. title plot simplify logical. TRUE, plot use simplified labels instead raw labels. repro logical. TRUE, flowers fruits observations add plot.","code":""},{"path":"/reference/heatmap_Labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the heatmap of Labels — heatmap_Labels","text":"return ggplot","code":""},{"path":"/reference/merge_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge labels and rgb values — merge_values","title":"Merge labels and rgb values — merge_values","text":"function merge labels long format rgb metrics values.","code":""},{"path":"/reference/merge_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge labels and rgb values — merge_values","text":"","code":"merge_values(longLabels, rgbValues)"},{"path":"/reference/merge_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge labels and rgb values — merge_values","text":"longLabels tibble dataframe contains labels directly import xlsx file. rgbValues tibble dataframe rgb metrics values.","code":""},{"path":"/reference/merge_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge labels and rgb values — merge_values","text":"tibble","code":""},{"path":"/reference/pivot_Labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Format labels values from wide data to long data — pivot_Labels","title":"Format labels values from wide data to long data — pivot_Labels","text":"function format labels data wide long format","code":""},{"path":"/reference/pivot_Labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format labels values from wide data to long data — pivot_Labels","text":"","code":"pivot_Labels(labels_path, simplify_labels = FALSE, out_dir_path = NULL)"},{"path":"/reference/pivot_Labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format labels values from wide data to long data — pivot_Labels","text":"labels_path chr. Path labeling file simplify_labels logical Decompose simplify labels TRUE. defaut FALSE. out_dir_path chr. path directory use stored result.","code":""},{"path":"/reference/pivot_Labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format labels values from wide data to long data — pivot_Labels","text":"tibble","code":""},{"path":"/reference/plot_signal.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the spectral signal over time — plot_signal","title":"Plot the spectral signal over time — plot_signal","text":"fct function","code":""},{"path":"/reference/plot_signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the spectral signal over time — plot_signal","text":"","code":"plot_signal(   data,   Species = NULL,   Genus = NULL,   Family = NULL,   Type = NULL,   Metric = \"mean\",   Band = NULL,   facet_by = \"band\",   slcted_id = NULL,   show_Labels = FALSE,   title = NULL )"},{"path":"/reference/plot_signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the spectral signal over time — plot_signal","text":"data tibble dataframe long data format labels Species chr. Specifying species want filter Genus chr. Specifying genus want filter Family chr. Specifying family(ies) want filter Type chr. Specifying type(s) want filter Metric chr. Specifying metric(s) want filter. defaut 'mean' Band chr. Specifying bande(s) want filter facet_by chr. Facetting variable. defaut 'band' slcted_id num. Highlighting id show_Labels logical. TRUE, shows phenophase labels plot. title chr. title plot","code":""},{"path":"/reference/plot_signal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the spectral signal over time — plot_signal","text":"return ggplot","code":""}]
